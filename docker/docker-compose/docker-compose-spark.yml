services:
  spark-master:
    image: bitnami/spark:latest
    container_name: spark-master
    environment:
      - SPARK_MODE=master
      - SPARK_RPC_AUTHENTICATION_ENABLED=no
      - SPARK_RPC_ENCRYPTION_ENABLED=no
      - SPARK_LOCAL_STORAGE_ENCRYPTION_ENABLED=no
      - SPARK_SSL_ENABLED=no
    ports:
      - "8082:8080" # Spark Master UI on port 8082
    volumes:
      - ../service-data/spark/configs:/opt/bitnami/spark/conf
      - ../service-data/spark/volumes:/opt/bitnami/spark/data
    networks:
      - big-data-network
    healthcheck:
      test: ["CMD-SHELL", "python3 -c 'import urllib.request as urllib; import json; res = urllib.urlopen(\"http://localhost:8080/json/\"); data = json.load(res); exit(0) if data[\"status\"] == \"ALIVE\" else exit(1)'"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 60s # Add a delay before the first health check

  spark-worker:
    image: bitnami/spark:latest
    container_name: spark-worker
    environment:
      - SPARK_MODE=worker
      - SPARK_MASTER_URL=spark://spark-master:7077
      - SPARK_WORKER_MEMORY=1G
      - SPARK_WORKER_CORES=1
      - SPARK_RPC_AUTHENTICATION_ENABLED=no
      - SPARK_RPC_ENCRYPTION_ENABLED=no
      - SPARK_LOCAL_STORAGE_ENCRYPTION_ENABLED=no
      - SPARK_SSL_ENABLED=no
    depends_on:
      - spark-master
    ports:
      - "8083:8081" # Spark Worker UI on port 8083
    volumes:
      - ../service-data/spark/configs:/opt/bitnami/spark/conf
      - ../service-data/spark/volumes:/opt/bitnami/spark/data
    networks:
      - big-data-network
    healthcheck:
      test: ["CMD-SHELL", "python3 -c 'import urllib.request as urllib; import json; res = urllib.urlopen(\"http://localhost:8081/json/\"); data = json.load(res); exit(0) if \"cores\" in data else exit(1)'"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 60s # Add a delay before the first health check

networks:
  big-data-network:
    external: true